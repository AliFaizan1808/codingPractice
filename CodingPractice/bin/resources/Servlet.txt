
1) ServletConfig vs ServletContext
   https://stackoverflow.com/questions/4223564/servletconfig-vs-servletcontext
   
	@Override
	public void init() throws ServletException {
		String foo = getInitParameter("foo");
		String bar = getServletContext().getInitParameter("bar");
		// ...
	}

	In this example, getInitParameter("foo") returns the value of the <init-param> of the specific <servlet> entry 
	in web.xml, and getServletContext().getInitParameter("bar") returns the value of the independent <context-param> 
	in web.xml.
	
2) https://www.interviewbit.com/servlet-interview-questions/ --Interview questions
	point no 11.
	
3) Servlet chaining

  Taking the request from a browser window and processing that request by using multiple servlets as a chain
  is called servlet chaining. In servlet chaining, we perform communication between servlet programs to process 
  the request given by a client.
  
  All servlet programs that participate in a servlet chaining will use the same request and response objects 
  because they process the same request that is given by the client.
  
  To perform servlet chaining we need the RequestDispatcher object. RequestDispatcher object means it is the object 
  of a container supplied java class implementing javax.servlet.RequestDispatcher interface.
  
  Very important concept below -->
  
4) What is Request Dispatching in the context of a java web application?

   One servlet delegating the request processing duty to another servlet is nothing not but request dispatching. 
   Inter-servlet communication is implemented using request dispatching i.e. one servlet can communicate with 
   another servlet of the same application using request dispatching
   
   Two steps are involved in the implementation of request dispatching.

   Step1. Create RequestDispatcher object
             RequestDispatcher rd = request.getRequestDispatcher(“/other servlet public URL name”);
			                         or
									getServletContext().getNamedDispatcher(“logical name of destination servlet”);
			 
   Step2. Delegate the request to the other servlet
                    rd.forward(request, response);
                    rd.include(request, response);
	Note ::->				
	In the case of the forward mechanism of request dispatching the second servlet is responsible for the response
	generation. In the case of the include mechanism, only the first servlet is responsible for the response 
	generation.



5) How does a single servlet handle multiple requests from client side ?
   
   1) when u deploy the project into server then one instant of servlet gets cteated and for each request there is 
   different thread will be there.
   2) You don't create multiple instances of servlet. The servlet engine utilizes a separate thread from the thread
      pool for each request (up to some max number of Threads allocated).
   3) The performance is relative to the number of threads, not the number of instances of the servlet.
   4) For example, if there are 1000 requests, and the maximum threads that can be generated by servlet is 100, 
   then there will be performance degradation.
   5) In order to avoid this problem, we can use load balancer by putting multiple servers behind a load balancer.
   
   
6) The event classes and interface are as follows:
	Classes: ServletRequestEvent, ServletContextEvent, HttpSessionEvent etc.
	Interfaces: ServletRequestListner, ServletContextListner, HttpSessionListner etc
	
7) Load on start-up is also working on two values:

   Positive (0,1,2,3….): The lowest positive value will be loaded first.
   Negative: The servlet will be loaded when the first request is received.
   
   
8) Is servlet synchronized?

Answer: No, the servlets are not synchronized. If we want to make the servlet synchronized, we must implement 
        SingleThreadInterface.


9)  Is it possible to have a Constructor inside the Servlet?
    Yes, it is possible to define a constructor inside a servlet, but it can be called only by Servlet container
	and not explicitly.
	
10) What is the major difference between Context Parameter and Context Attribute?
  
  
  https://www.softwaretestinghelp.com/servlet-interview-questions/ --wonderful Interview questions...
  
11)
 
 response.sendError(404, "Page not Found!!!" );

    <error-page>
		<error-code>404</error-code>
		<location>/AppExceptionHandler</location>
    </error-page>
	<error-page>
		<exception-type>javax.servlet.ServletException</exception-type>
		<location>/AppExceptionHandler</location>
	</error-page>
	